{
  "env": {
    "node": true,
    "commonjs": true
  },
  "settings": {
    "react": {
      "version": "detect",
      "pragma": "React",
      "fragment": "Fragment",
      "flowVersion": "0.53"
    }
  },
  "extends": [
    // "plugin:prettier/recommended",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:cypress/recommended",
    "plugin:react/jsx-runtime",
    "plugin:react/all",
    "next/core-web-vitals"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.eslint.json"
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "react-hooks",
    "import",
    // "prettier",
    "cypress"
  ],
  "ignorePatterns": [],
  "overrides": [
    {
      "files": "*.js",
      "parser": ".tsconfig.json"
    },

    {
      "files": "*.d.ts",
      "rules": {
        "@typescript-eslint/naming-convention": "off"
      }
    }
  ],

  "rules": {
    "cypress/no-assigning-return-values": "error",
    "cypress/no-unnecessary-waiting": "off",
    "cypress/assertion-before-screenshot": "warn",
    "cypress/no-async-tests": "error",
    "cypress/no-pause": "error",
    "no-mixed-spaces-and-tabs": 0,
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "require-await": "off",
    // "prettier/prettier": ["error", { "endOfLine": "auto" }],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/consistent-type-definitions": "error",
    "@typescript-eslint/consistent-type-imports": "warn",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": true
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      },
      {
        "selector": "typeAlias",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^T[A-Z]",
          "match": true
        }
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["camelCase"]
      },
      {
        "selector": "variable",
        "modifiers": ["destructured"],
        "format": null
      }
    ],
    "semi-style": ["error", "last"],
    "semi": ["error", "always"],
    "no-extra-semi": 0,
    "no-unreachable": "error",
    "no-unexpected-multiline": "error",
    "no-unused-vars": "off",
    "no-console": 1,
    "no-restricted-syntax": [
      "error",
      {
        "selector": "CallExpression[callee.object.name='console'][callee.property.name!=/^(log|warn|error|info|trace)$/]",
        "message": "Unexpected property on console object was called"
      }
    ],
    "import/order": [
      "error",
      {
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
          "type"
        ],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          }
        ],
        "newlines-between": "always",
        "pathGroupsExcludedImportTypes": ["builtin"]
      }
    ],
    "indent": ["error", "tab"],
    "react/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/jsx-indent": "off",
    "react/jsx-indent-props": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-max-props-per-line": "off",
    "react/jsx-max-depth": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-newline": "off",
    "react/jsx-no-constructed-context-values": "off",
    "react/jsx-curly-newline": "off",
    "react/jsx-no-bind": [
      "error",
      {
        "ignoreDOMComponents": false,
        "ignoreRefs": false,
        "allowArrowFunctions": true,
        "allowFunctions": true,
        "allowBind": false
      }
    ],
    "react/boolean-prop-naming": [
      "error",
      {
        "propTypeNames": ["bool", "mutuallyExclusiveTrueProps"],
        "rule": "^(is|has)[A-Z]([A-Za-z]?)+"
      }
    ],
    "react/jsx-no-leaked-render": "off",
    "react/no-access-state-in-setstate": "error",
    "react/no-children-prop": [
      "error",
      {
        "allowFunctions": true
      }
    ],
    "linebreak-style": ["error", "unix"],
    "quotes": ["error", "single"],
    "react/jsx-no-literals": "off",
    "react/forbid-component-props": "off",
    "react/no-array-index-key": "off",
    "no-multiple-empty-lines": ["error", { "max": 1 }],
    "@typescript-eslint/no-empty-function": "off",
    "react/require-default-props": "off",
    "react/display-name": "off"
  }
}
